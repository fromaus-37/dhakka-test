# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  - main

pool:
  vmImage: ubuntu-22.04

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '18.x'
    displayName: 'Install Node.js'

  - script: |
      npm install .
      npm run lint # this is how we build, at least for now
    displayName: 'npm install and build'

  - script: |
      npm run test-ci:unit

  - task: PublishTestResults@2
    displayName: 'publish unit test results'
    condition: succeededOrFailed() # because otherwise we won't know what tests failed
    inputs:
      testResultsFiles: 'coverage/junit.xml'
      testRunTitle: 'Unit tests'

  - script: |
      npm link
      npm run test-ci:integration

  - task: PublishTestResults@2
    displayName: 'publish integration test results'
    condition: succeededOrFailed() # because otherwise we won't know what tests failed
    inputs:
      testResultsFiles: 'coverage/junit.xml'
      testRunTitle: 'Integration tests'

  - script: |
      npm run report-coverage-ci
    displayName: 'Create coverage report for publishing to Azure Pipelines'

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: coverage/cobertura-coverage.xml

  - task: BuildQualityChecks@8
    displayName: 'Check build quality (including coeverage)'
    inputs:
      checkCoverage: true
      coverageFailOption: fixed
      coverageType: lines
      coverageThreshold: 80

  # version the pipeline property, as: <current major.minor.patch>-then-pr<pr number>
  - script: |
      newver=$(npm pkg get version)
      # take everything after first double quote
      newver=${newver#*\"}
      # take everything before last double quote
      newver=${newver%\"*}
      # take everything before first hyphen (will be a no-op if no hyphen found)
      newver=${newver%%-*}
      # now append pr number after hyphen to version number we just extracted
      newver=$newver-pr$(System.PullRequest.PullRequestId)-build$(Build.BuildNumber)
      echo Version of package deployed to UAT npm registry: $newver
      # finally, set the new ver number on our package
      npm pkg set version=$newver
      # output version number of package for use by a subsequent task
      # using magic notation to do that using echo
      echo "##vso[task.setvariable variable=UAT_PACKAGE_VER]$newver"
    displayName: 'Set version number of package for deployment to UAT Artifacts feed'

  # publish release notes also, as they are a UAT/post-UAT artifact, so just before the final
  #     deployment's version number is produced

  - task: Npm@1
    inputs:
      command: publish
      publishRegistry: useFeed
      publishFeed: Dhakka/UAT

  #In task below:
  #commentType has no effect (all comments are of type text)
  #status of 4 means Closed (3 is Won't Fix and 5 is Unknown, I didn' try the rest)
  - powershell: |
      $body = @"
      {
          "comments": [
            {
              "parentCommentId": 0,
              "content": "# Deployed to UAT\n\nPackage version [$(UAT_PACKAGE_VER)]($(System.CollectionUri)$(System.TeamProject)/_artifacts/feed/UAT/Npm/dhakka/overview/$(UAT_PACKAGE_VER)) deployed to UAT registry by CI build [#$(Build.BuildNumber)]($(System.CollectionUri)$(System.TeamProject)/_build/results?buildId=$(Build.BuildId)&view=results)\n\n**If you have already connected to the UAT feed then:** \`npm install dhakka@$(UAT_PACKAGE_VER)\`",
              "commentType": 1
            }
          ],
          "status": 4
        }
      "@
      $url = "$(System.CollectionUri)$(System.TeamProject)/_apis/git/repositories/Dhakka/pullRequests/$(System.PullRequest.PullRequestId)/threads?api-version=5.1"
      $result = Invoke-RestMethod -Uri $url -Method POST -Headers @{Authorization = "Bearer $(System.AccessToken)"} -Body $Body -ContentType application/json
    displayName: Post comment on PR
